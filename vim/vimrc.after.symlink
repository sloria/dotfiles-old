" Sources:
"   https://github.com/square/maximum-awesome/blob/master/vimrc


set encoding=utf-8
" Need this for themes to work correctly
set t_Co=256
colorscheme Tomorrow-Night

set autoindent
set autoread " reload files when changed on disk, i.e. via `git checkout`
set backspace=2 " Fix broken backspace in some setups
set backupcopy=yes
" Make "yanks" work with system clipboard
set clipboard=unnamed
set ignorecase " case-insensitive search
set incsearch " search as you type
" Patterns for expand(), ctrlp, etc. to ignore
set wildignore+=log/**,node_modules/**,target/**,tmp/**,*.rbc/,.git/*,*/.hg/*,*/.svn/*
set wildmenu " show a navigable menu for tab completion
set wildmode=longest,list,full
set cursorline  " have a line indicate cursor location
set listchars=tab:▸\ ,trail:▫

" Enable basic mouse behavior such as resizing buffers.
set mouse=a
if exists('$TMUX') " Support resizing in tmux
  set ttymouse=xterm2
endif

" Quickly reload vimrc
noremap <silent> <leader>V :source ~/.vimrc<CR>:filetype detect<CR>:exe ":echo 'vimrc reloaded'"<CR>

" Quick copy whole file
map <Leader>a :%y+<CR>
" Turn off automatic folding in python-mode
let g:pymode_folding = 0
let g:pymode_doc = 0
let g:pymode_lint_cwindow = 0
let g:pymode_lint_ignore = "E501"
set completeopt=menu " prevent pymode from showing documentation on autocomplete
                    " https://github.com/klen/python-mode/issues/384
" Pytest
nmap <silent><Leader>f <Esc>:Pytest file verbose<CR>
nmap <silent><Leader>c <Esc>:Pytest class verbose<CR>
nmap <silent><Leader>m <Esc>:Pytest method verbose<CR>

" Change cursor style when entering INSERT mode (works in tmux!)
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"
else
  let &t_SI = "\<Esc>]50;CursorShape=1\x7"
  let &t_EI = "\<Esc>]50;CursorShape=0\x7"
endif

" Source the vimrc file after saving it
" NOTE: Source vimrc.after instead of $MYVIMRC
" because that is what janus uses
if has("autocmd")
  autocmd bufwritepost .vimrc.after source ~/.vimrc.after
endif

" Quickly edit vimrc.after
nmap <leader>v :tabedit ~/.vimrc.after<CR>

" Open Fugitive's status pane in a larger window
"nmap <leader>gs :Gstatus<CR><C-w>20+
set previewheight=25

" Ctrlp: Index hidden files
"let g:ctrlp_show_hidden = 1

nnoremap <leader>d :NERDTreeToggle<CR>

" Open help in a new tab
cabbrev h tab h

" Quickly traverse buffers

nnoremap <silent> [b :bprevious<CR>
nnoremap <silent> ]b :bnext<CR>
nnoremap <silent> [B :bfirst<CR>
nnoremap <silent> ]B :blast<CR>

set noswapfile
if exists("+undofile")
" undofile - This allows you to use undos after exiting and restarting
" This, like swap and backups, uses .vim-undo first, then ~/.vim/undo
" :help undo-persistence
" This is only present in 7.3+
  if isdirectory($HOME . '/.vim/undo') == 0
    :silent !mkdir -p ~/.vim/undo > /dev/null 2>&1
  endif
  set undodir=./.vim-undo//
  set undodir+=~/.vim/undo//
  set undofile
endif
